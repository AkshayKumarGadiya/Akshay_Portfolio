{"version":3,"sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","components/Header.jsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx","components/Projects.jsx"],"names":["Col","React","props","ref","as","bsPrefix","className","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","classNames","useCol","colProps","Component","_jsx","length","displayName","Row","decoratedBsPrefix","sizePrefix","cols","Header","title","CardImg","variant","prefix","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Footer","ImgOverlay","Badge","pill","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardImageStyle","height","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","theme","useContext","ThemeContext","project","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","src","image","bodyText","links","map","link","Button","onClick","window","open","href","tags","cardFooterBackground","tag","bsPrimaryVariant","containerStyle","marginBottom","showMoreStyle","Projects","header","useState","data","setData","showMore","setShowMore","useEffect","fetch","endpoints","projects","method","then","res","json","catch","err","numberOfItems","xs","sm","md","lg","slice"],"mappings":"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","file":"static/js/2.1eb5de19.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardImageStyle: {\n    height: 250,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'justify',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} style={styles.cardImageStyle} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.string,\n    tags: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Button } from 'react-bootstrap';\nimport { ThemeContext } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport ProjectCard from './projects/ProjectCard';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  containerStyle: {\n    marginBottom: 25,\n  },\n  showMoreStyle: {\n    margin: 25,\n  },\n};\n\nconst Projects = (props) => {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [showMore, setShowMore] = useState(false);\n\n  useEffect(() => {\n    fetch(endpoints.projects, {\n      method: 'GET',\n    }).then((res) => res.json()).then((res) => setData(res)).catch((err) => err);\n  }, []);\n  const numberOfItems = showMore && data ? data.length : 6;\n  return (\n    <>\n      <Header title={header} />\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container style={styles.containerStyle}>\n              <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\n                {data.projects?.slice(0, numberOfItems).map((project) => (\n                  <Fade key={project.title}>\n                    <ProjectCard project={project} />\n                  </Fade>\n                ))}\n              </Row>\n\n              {!showMore\n                && (\n                <Button\n                  style={styles.showMoreStyle}\n                  variant={theme.bsSecondaryVariant}\n                  onClick={() => setShowMore(true)}\n                >\n                  show more\n                </Button>\n                )}\n            </Container>\n          </div>\n        ) : <FallbackSpinner /> }\n    </>\n  );\n};\n\nProjects.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Projects;\n"],"sourceRoot":""}